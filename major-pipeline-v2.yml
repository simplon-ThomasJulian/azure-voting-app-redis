trigger:
- master

stages:
- stage: 'Build_docker_image' 
  displayName: 'Build_docker_image' 
  jobs:
  - job: 'Build_Docker_image' 
    displayName: 'Docker Image Build' 
    pool:
      vmImage: ubuntu-latest 
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'dockerhub connection'
        repository: 'thjulian23/brief-8-tj-2'
        command: 'buildAndPush'
        Dockerfile: 'Dockerfile'
        tags: 'latest'


- stage: 'QAL_Deployment'
  condition: succeeded()
  displayName: 'Deploy on QAL' 
  jobs:
  - job: 'QAL_Deploy' 
    displayName: 'Deploy on QAL' 
    pool:
      vmImage: 'ubuntu-latest' 
    steps:
    - task: KubernetesManifest@0
      name: kubeonqal
      displayName: 'kubeonqal'
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'clusterconnection'
        namespace: 'qal'
        manifests: '**/kubernetes/qal/*'
    - task: Bash@3
      name: waitingfordeploy
      inputs:
        targetType: 'inline'
        script: 'sleep 30'
      
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          exitcode=$(curl -s -o -I -w "%{http_code}" http://qalvotingapp.simplon-thomas.space)
          echo "##vso[task.setvariable variable=exit]$exitcode"


    - task: CmdLine@2
      name : chargetest
      condition: eq(variables['exit'],'200')
      inputs:
        script: |
          seq 250 | parallel --max-args 0  --jobs 20 "curl -k -iF 'vote=free' http://qalvotingapp.simplon-thomas.space"

    - task: CmdLine@2
      name: waitforcharge
      inputs:
        script: 'sleep 40'

    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'clusterconnection'
        namespace: 'qal'
        command: 'get'
        useConfigurationFile: true
        configuration: './kubernetes/qal/qal_app.yml'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
      name: qalpods

    - task: CmdLine@2
      name: countpod
      inputs:
        script: |
          qalappcount=$(echo $QALPODS_KUBECTLOUTPUT | jq '.items[0].spec.replicas')
          echo $qalappcount
          echo "##vso[task.setvariable variable=countpods]$qalappcount"

    - task: Kubernetes@1
      name: deleteqal
      condition: ne(variables['countpods'],2)
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'clusterconnection'
        namespace: 'qal'
        command: 'delete'
        arguments: '-f $(System.DefaultWorkingDirectory)/kubernetes/qal/'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
    - task: Bash@3
      name: yourverygood
      condition: succeeded()
      inputs:
        targetType: 'inline'
        script: 'echo "QAL DELETION"'


- stage: 'Deploy_canary'
  condition: succeeded() 
  displayName: 'Deploy Canary Release' 
  jobs:
  - job: 'Deploy_canary' 
    displayName: 'Deployment of Canary Release' 
    pool:
      vmImage: 'ubuntu-latest' 
    steps:
    - task: KubernetesManifest@0
      name: kubeonprodcanary
      condition: succeeded()
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'clusterconnection'
        namespace: 'prod'
        strategy: 'canary'
        percentage: '30'
        manifests: '**/kubernetes/canary/deployment-canary.yaml'

- stage: 'ManualIntervention'
  condition: succeeded() 
  displayName: 'In waiting of validation of working canary release' 
  jobs:
  - job: waitForValidation
    displayName: Wait for external validation
    pool: server
    timeoutInMinutes: 4320 # job times out in 3 days
    steps:
    - task: ManualValidation@0
      timeoutInMinutes: 1440 # task times out in 1 day
      inputs:
        notifyUsers: |
          tjulian.ext@simplonformations.onmicrosoft.com
        instructions: 'Please validate the build configuration and resume'
        onTimeout: 'resume'



- stage: 'DeployOnProd'
  displayName: 'Deploy on Prod and delete Canary' 
  jobs:
  - job: 'Deployonprod' 
    displayName: 'Deploy on Prod and delete Canary' 
    pool:
      vmImage: 'ubuntu-latest' 
    steps:

    - task: Kubernetes@1
      name: deleteprodapp
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'clusterconnection'
        namespace: 'prod'
        command: 'delete'
        arguments: '-f $(System.DefaultWorkingDirectory)/kubernetes/prod/deploy_app.yml'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
      

    - task: KubernetesManifest@0
      name: kubeonprod
      condition: succeeded()
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'clusterconnection'
        namespace: 'prod'
        manifests: '**/kubernetes/prod/deploy_app.yml'

    - task: Kubernetes@1
      name: deletecanary
      condition: succeeded()
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'clusterconnection'
        namespace: 'prod'
        command: 'delete'
        arguments: '-f $(System.DefaultWorkingDirectory)/kubernetes/canary/deletion-canary.yml'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'

    - task: Bash@3
      name: waitingfordeploy
      inputs:
        targetType: 'inline'
        script: 'sleep 30'

    - task: Bash@3
      name: checksite
      condition: succeeded()
      inputs:
        targetType: 'inline'
        script: |
          exitcode=$(curl -s -o -I -w "%{http_code}" http://votingappkube.simplon-thomas.space)
          echo "##vso[task.setvariable variable=exit]$exitcode"

    - task: CmdLine@2
      name : chargetest
      condition: eq(variables['exit'],'200')
      inputs:
        script: |
          seq 250 | parallel --max-args 0  --jobs 20 "curl -k -iF 'vote=free' http://votingappkube.simplon-thomas.space"

    - task: CmdLine@2
      name: waitforcharge
      inputs:
        script: 'sleep 40'

    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'clusterconnection'
        namespace: 'prod'
        command: 'get'
        useConfigurationFile: true
        configuration: './kubernetes/prod/deploy_app.yml'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
      name: prodpods

    - task: CmdLine@2
      name: countpod
      inputs:
        script: |
          prodappcountne(variables['appcnt'],2)=$(echo $PRODPODS_KUBECTLOUTPUT | jq '.items[0].spec.replicas')
          echo $prodappcount
          echo "##vso[task.setvariable variable=countpods]$prodappcount"

    - task: Bash@3
      name: yourverygood
      condition: ne(variables['countpods'],2)
      inputs:
        targetType: 'inline'
        script: 'echo "GOOD JOB PIPELINE!"'